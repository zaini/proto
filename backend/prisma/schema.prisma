// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountType {
  LEARNER
  TEACHER
  ADMIN
}

model User {
  id          Int         @id @default(autoincrement())
  email       String      @unique
  password    String
  accountType AccountType @default(LEARNER)
  createdAt   DateTime    @default(now())
  Classroom   Classroom[]
  Problem     Problem[]
}

model Classroom {
  id         Int          @id @default(autoincrement())
  owner      User         @relation(fields: [userId], references: [id])
  userId     Int
  createdAt  DateTime     @default(now())
  Assignment Assignment[]
}

model Assignment {
  id                    Int                     @id @default(autoincrement())
  classroom             Classroom               @relation(fields: [classroomId], references: [id])
  classroomId           Int
  createdAt             DateTime                @default(now())
  setDate               DateTime
  dueDate               DateTime
  ProblemsOnAssignments ProblemsOnAssignments[]
}

model Problem {
  id                    Int                     @id @default(autoincrement())
  creator               User                    @relation(fields: [userId], references: [id])
  userId                Int
  likes                 Int                     @default(0)
  dislikes              Int                     @default(0)
  specification         Json
  ProblemsOnAssignments ProblemsOnAssignments[]
}

// TODO check this is many-to-many
model ProblemsOnAssignments {
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  assignmentId Int
  problem      Problem    @relation(fields: [problemId], references: [id])
  problemId    Int

  @@id([assignmentId, problemId])
}

// HelpRequest, DailyChallenge, CronJobHistory etc.
